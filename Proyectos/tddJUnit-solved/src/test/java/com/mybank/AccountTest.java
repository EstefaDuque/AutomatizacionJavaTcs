/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.mybank;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.ArrayList;


public class AccountTest {

    @Test public void testAppHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull("app should have a greeting", classUnderTest.getGreeting());
    }

    @Test public void verificarSaldoDespuesDeHacerDeposito() { //cp1
        Account account = new Account();
        account.deposit(100);
        account.deposit(500);
        Integer balance = account.getBalance();
        assertEquals(balance, 600, 0);
    }

    @Test public void verificarSaldoSuficienteParaHacerCompra() { //cp2
        Account account = new Account();
        boolean compraExitosa = account.buy(300);
        assertEquals( compraExitosa, true );
    }

    @Test public void verificarCompraDespuesDeHacerDeposito() { //cp3 y cp4
        Account account = new Account();
        account.deposit(500);
        boolean compraExitosa = account.buy(300);
        assertEquals( compraExitosa, true );
    }

    @Test public void verificarCompraFallidaPorSaldoInsuficiente() { //cp5
        Account account = new Account();
        account.deposit(200);
        boolean compraExitosa = account.buy(800);
        assertEquals( compraExitosa, false );
    }

    @Test public void verificarMyListaDeDepositos() { //cp6
        Account account = new Account();
        account.deposit(200);
        account.deposit(300);
        account.deposit(500);
        ArrayList<Integer> depositList = account.getDepositList();
        assertEquals( depositList.size(), 3 );
    }

    @Test public void verificarCompraConSaldoCredito() { //cp7 y 8 y 9
        Account account = new Account();
        boolean compraExitosa = account.buy(500);
        assertEquals( true , compraExitosa );
        compraExitosa = account.buy(100);
        assertEquals( false , compraExitosa );
    }

    @Test public void verificarConsultaDeProductos() { //cp10
        Account account = new Account();
        account.deposit(300);
        String productos = account.getProducts();
        System.out.print( productos);
        assertEquals( productos, "Ud tiene los siguiete productos:\nCuenta coriente con Saldo Depositos:300\nSu Saldo Credito es:500" );
    }

    @Test public void verificarValorCreditoAlCrearCuenta() { //cp12
        Account account = new Account();
        Integer credit = account.getCredit();
        assertEquals( 500, credit, 0);
    }

    @Test public void verificarCompraMixtaDepositosYCredito() { //cp13
        Account account = new Account();
        account.deposit(200);
        boolean compraExitosa = account.buy(700);
        assertEquals( true , compraExitosa );
        Integer balance = account.getBalance();
        Integer credit = account.getCredit();
        assertEquals( balance , 0, 0 );
        assertEquals( credit , 0, 0 );
    }

    @Test
    public void verificarPreabrobado(){//cp11
        Account account = new Account();
        float credito = account.getCredit();
        assertEquals(500, credito,0);
    }
}
